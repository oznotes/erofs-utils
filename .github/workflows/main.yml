name: Build on Windows with MSYS2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Enables manual triggering

jobs:
  build-windows-msys2:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache MSYS2 Installation
        uses: actions/cache@v3
        with:
          path: C:\msys64
          key: ${{ runner.os }}-msys2-${{ hashFiles('**/Makefile.am') }}
          restore-keys: |
            ${{ runner.os }}-msys2-

      - name: Install MSYS2
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://repo.msys2.org/distrib/x86_64/msys2-x86_64-20220419.exe -OutFile msys2-installer.exe -UseBasicParsing -Verbose
          & .\msys2-installer.exe /S /D=C:\msys64
          Remove-Item msys2-installer.exe -Force -Verbose

      - name: Update MSYS2 and Install Packages
        shell: pwsh
        run: |
          C:\msys64\usr\bin\bash.exe -c "pacman -Syu --noconfirm"
          C:\msys64\usr\bin\bash.exe -c "pacman -S --noconfirm base-devel git make autoconf automake libtool gcc mingw-w64-x86_64-gcc"

      - name: Add MSYS2 to PATH
        shell: pwsh
        run: |
          $env:PATH = "C:\msys64\usr\bin;C:\msys64\mingw64\bin;" + $env:PATH
          Write-Output "PATH updated: $env:PATH"

      - name: Make Build Scripts Executable
        shell: pwsh
        run: |
          bash -c "chmod +x autogen.sh build.sh"

      - name: Run Build Script
        shell: pwsh
        run: |
          bash -c "./build.sh"

      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ./out